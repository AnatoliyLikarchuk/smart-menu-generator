// –¢–µ—Å—Ç –∂–∏–≤–æ–≥–æ API —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º
const testResponse = {
  "success": true,
  "data": {
    "dish": {
      "idMeal": "52918",
      "strMeal": "Fish Stew with Rouille",
      "strCategory": "Seafood",
      "strArea": "French",
      "strIngredient1": "Prawns",
      "strIngredient2": "Olive Oil",
      "strIngredient3": "Dry White Wine",
      "strIngredient4": "Fish Stock",
      "strIngredient5": "Fennel",
      "strIngredient6": "Onion",
      "strIngredient7": "Garlic",
      "strIngredient8": "Potatoes",
      "strIngredient9": "Orange",
      "strIngredient10": "Star Anise",
      "strIngredient11": "Bay Leaf",
      "strIngredient12": "Harissa Spice",
      "strIngredient13": "Tomato Puree",
      "strIngredient14": "Chopped Tomatoes",
      "strIngredient15": "Mussels",
      "strIngredient16": "White Fish",
      "strIngredient17": "Thyme",
      "strIngredient18": "Bread"
    }
  }
};

import TranslationService from './services/translationService.js';

async function testLiveTranslation() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥ –∂–∏–≤–æ–≥–æ –±–ª—é–¥–∞ –∏–∑ API...\n');
  
  const dish = testResponse.data.dish;
  
  try {
    console.log('üîç –ò—Å—Ö–æ–¥–Ω–æ–µ –±–ª—é–¥–æ:');
    console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${dish.strMeal}`);
    console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${dish.strCategory}`);
    console.log(`–ö—É—Ö–Ω—è: ${dish.strArea}`);
    
    console.log('\nüîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º...');
    const translatedDish = await TranslationService.translateDish(dish, true, true);
    
    console.log('\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤–æ–¥–∞:');
    console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${dish.strMeal} ‚Üí ${translatedDish.strMealRu || '–ù–ï –ü–ï–†–ï–í–ï–î–ï–ù–û'}`);
    console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${dish.strCategory} ‚Üí ${translatedDish.strCategoryRu || '–ù–ï –ü–ï–†–ï–í–ï–î–ï–ù–û'}`);
    console.log(`–ö—É—Ö–Ω—è: ${dish.strArea} ‚Üí ${translatedDish.strAreaRu || '–ù–ï –ü–ï–†–ï–í–ï–î–ï–ù–û'}`);
    
    console.log('\nü•ò –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:');
    if (translatedDish.ingredientsRu) {
      const ingredients = TranslationService.extractIngredients(dish);
      ingredients.forEach((ingredient, index) => {
        const translation = translatedDish.ingredientsRu[index];
        const status = translation === ingredient ? '‚ùå' : '‚úÖ';
        console.log(`  ${status} ${ingredient} ‚Üí ${translation}`);
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –∞ –∫–∞–∫–∏–µ –±—É–¥—É—Ç —á–µ—Ä–µ–∑ API
    console.log('\nüìä –ê–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:');
    const ingredients = TranslationService.extractIngredients(dish);
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ª–æ–≤–∞—Ä—è
    const { translateDishName, translateIngredient, translateCategory, translateArea } = await import('./data/translations.js');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
    const dishFromDict = translateDishName(dish.strMeal);
    console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–µ: ${dishFromDict !== dish.strMeal ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    let fromDict = 0, needsAPI = 0;
    ingredients.forEach(ingredient => {
      const translation = translateIngredient(ingredient);
      if (translation !== ingredient) {
        fromDict++;
      } else {
        needsAPI++;
      }
    });
    
    console.log(`–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ —Å–ª–æ–≤–∞—Ä–µ: ${fromDict}/${ingredients.length}`);
    console.log(`–¢—Ä–µ–±—É—é—Ç API –ø–µ—Ä–µ–≤–æ–¥: ${needsAPI}/${ingredients.length}`);
    
    console.log('\nüéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ:');
    if (needsAPI === 0) {
      console.log('üü¢ –í—Å–µ –ø–µ—Ä–µ–≤–æ–¥—ã –∏–∑ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ!');
    } else if (needsAPI <= 3) {
      console.log('üü° –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ API - –±—ã—Å—Ç—Ä–æ');
    } else {
      console.log('üü† –ú–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —á–µ—Ä–µ–∑ API - –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω–æ');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

testLiveTranslation();